name: Deploy CDK Infrastructure

on:
  push:
    branches:
      - main
  repository_dispatch:
    types:
      - trigger-cdk-deploy
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install  # Install all dependencies, including devDependencies
          npm install --save-dev typescript  # Ensure TypeScript is installed
          npx tsc --version  # Verify TypeScript is installed

      - name: Download and verify website artifact
        run: |
          echo "Downloading dist.zip..."
          curl -L -o dist.zip https://github.com/jessekunze/angus-demo/releases/download/latest/dist.zip
          if [ ! -s dist.zip ]; then
            echo "Error: dist.zip is empty or missing!"
            exit 1
          fi
          unzip -o dist.zip -d dist/
          if [ ! -f "dist/dist/index.html" ]; then
            echo "Error: index.html is missing in dist/dist after extraction!"
            exit 1
          fi
          ls -R dist/dist

      - name: Ensure Lambda dependencies are installed
        run: |
          if [ -f "lambda/package.json" ]; then
            cd lambda
            npm install --only=prod
            cd ..
          fi

      - name: Ensure Lambda folder exists
        run: |
          ls -lrt lambda/
          if [ ! -d "lambda" ]; then
            echo "Error: Lambda folder is missing!"
            exit 1
          fi

      - name: Compile TypeScript In-Place
        run: |
          npx tsc || { echo "TypeScript compilation failed!"; exit 1; }
          echo "Checking Lambda directory after compilation..."
          ls -R lambda/ || { echo "No compiled files found in lambda/"; exit 1; }

      - name: Deploy CDK stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: npx cdk deploy --all --require-approval never